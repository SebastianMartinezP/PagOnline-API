-- Descomentar para crear usuario
-- Crear Usuario
--CREATE USER C##Security IDENTIFIED by sec123 ACCOUNT UNLOCK;

-- Asignar los recursos
--GRANT ALL PRIVILEGES TO C##Security;

--- Estructura Table
CREATE TABLE actividad (
    idActividad        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion        VARCHAR2(100) NOT NULL,
    fechaInicio        DATE NOT NULL,
    fechaTermino       DATE NOT NULL,
    horaInicio         DATE NOT NULL,
    horaTermino        DATE NOT NULL,
    cantidadAsistente  INTEGER,
    fechaRegistro      DATE,
    direccion          VARCHAR2(150),
    idTipoActividad    INTEGER NOT NULL,
    rutCliente         VARCHAR2(25) NOT NULL,
    rutProfesional     VARCHAR2(25) NOT NULL,
    idCheck            INTEGER NULL
);

CREATE TABLE canal_pago (
    idCanalpago  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion  VARCHAR2(50) NOT NULL
);

CREATE TABLE check_list (
    idCheck              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    isSeniales           CHAR(1),
    isElementoSeguridad  CHAR(1),
    isMaterial           CHAR(1),
    isRedAgua            CHAR(1),
    isLuminaria          CHAR(1),
    isSeguro             CHAR(1),
    isTrabajoSeguro      CHAR(1),
    descripcion          VARCHAR2(200) NOT NULL,
    fechaRegistro        DATE NOT NULL
);

CREATE TABLE cliente (
    rutCliente      VARCHAR2(25) PRIMARY KEY,
    razonSocial     VARCHAR2(60) NOT NULL,
    numeroContacto  VARCHAR2(20),
    isMoroso        CHAR(1) NOT NULL,
    idRubro         INTEGER NOT NULL
);

CREATE TABLE contrato (
    idContrato     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion    VARCHAR2(250) NOT NULL,
    valor          INTEGER NOT NULL,
    fechaContrato  DATE NOT NULL,
    idPago         INTEGER NOT NULL,
    rutCliente     VARCHAR2(25) NOT NULL,
    idActividad    INTEGER NOT NULL
);

CREATE TABLE historial_actividad (
    idHistorial              INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cantCapacitaciones       INTEGER,
    cantAccidentesAsistidos  INTEGER,
    fechaRegistro            DATE,
    rutProfesional           VARCHAR2(25) NOT NULL
);

CREATE TABLE comprobante_pago (
    idComprobante INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    numeroTarjeta VARCHAR2(16) NOT NULL,
    pinTarjeta INT NOT NULL,
    fechaValida VARCHAR2(4) NOT NULL,
    fechaRegistro DATE NOT NULL,
    monto INTEGER NOT NULL, 
    tipoMoneda VARCHAR2(20) NOT NULL, -- CLP, UF, UTM 
    valorUsd NUMERIC(10,2) NOT NULL, -- d√≥lar en el momento de la consulta
    valorUf NUMERIC(10,2) NOT NULL, -- uf en el momento de la consulta
    valorUtm NUMERIC(10,2) NOT NULL -- utm en el momento de la consulta
);

CREATE TABLE pago (
    idPago         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fechaRegistro  DATE NOT NULL,
    montoPago      INTEGER NOT NULL, -- siempre en pesos chilenos 
    idComprobante  INTEGER NOT NULL,
    idCanalPago    INTEGER NOT NULL,

    CONSTRAINT pago_comprobante_pago_fk
        FOREIGN KEY (idComprobante) 
        REFERENCES comprobante_pago (idComprobante)
);

CREATE TABLE perfil_usuario (
    idPerfil     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion  VARCHAR2(60) NOT NULL
);

CREATE TABLE profesional (
    rutProfesional   VARCHAR2(25) PRIMARY KEY,
    primerNombre     VARCHAR2(60) NOT NULL,
    segundoNombre    VARCHAR2(60),
    primerApellido   VARCHAR2(60) NOT NULL,
    segundoApellido  VARCHAR2(60) NOT NULL,
    numeroContacto   VARCHAR2(20) NOT NULL,
    isVigente        CHAR(1) NOT NULL
);

CREATE TABLE rubro (
    idRubro      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion  VARCHAR2(60) NOT NULL
);

CREATE TABLE tipo_actividad (
    idTipoActividad  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    descripcion      VARCHAR2(60) NOT NULL,
    montoActividad   INTEGER NOT NULL
);

CREATE TABLE usuario (
    idUsuario         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    correo            VARCHAR2(60) NOT NULL,
    contrasenaHashed  VARCHAR2(150) NOT NULL,
    isHabilitado      CHAR(1) NOT NULL,
    idPerfil          INTEGER NOT NULL,
    rutCliente        VARCHAR2(25) NULL,
    rutProfesional    VARCHAR2(25) NULL
);

ALTER TABLE actividad
    ADD CONSTRAINT actividad_check_list_fk FOREIGN KEY ( idcheck )
        REFERENCES check_list ( idcheck );

ALTER TABLE actividad
    ADD CONSTRAINT actividad_cliente_fk FOREIGN KEY ( rutcliente )
        REFERENCES cliente ( rutcliente );

ALTER TABLE actividad
    ADD CONSTRAINT actividad_profesional_fk FOREIGN KEY ( rutprofesional )
        REFERENCES profesional ( rutprofesional );

ALTER TABLE actividad
    ADD CONSTRAINT actividad_tipo_actividad_fk FOREIGN KEY ( idtipoactividad )
        REFERENCES tipo_actividad ( idtipoactividad );

ALTER TABLE cliente
    ADD CONSTRAINT cliente_rubro_fk FOREIGN KEY ( idrubro )
        REFERENCES rubro ( idrubro );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_actividad_fk FOREIGN KEY ( idactividad )
        REFERENCES actividad ( idactividad );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_cliente_fk FOREIGN KEY ( rutcliente )
        REFERENCES cliente ( rutcliente );

ALTER TABLE contrato
    ADD CONSTRAINT contrato_pago_fk FOREIGN KEY ( idpago )
        REFERENCES pago ( idpago );

ALTER TABLE historial_actividad
    ADD CONSTRAINT his_actividad_pro_fk FOREIGN KEY ( rutprofesional )
        REFERENCES profesional ( rutprofesional );

ALTER TABLE pago
    ADD CONSTRAINT pago_canal_pago_fk FOREIGN KEY ( idcanalpago )
        REFERENCES canal_pago ( idcanalpago );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_cliente_fk FOREIGN KEY ( rutcliente )
        REFERENCES cliente ( rutcliente );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_perfil_usuario_fk FOREIGN KEY ( idperfil )
        REFERENCES perfil_usuario ( idperfil );

ALTER TABLE usuario
    ADD CONSTRAINT usuario_profesional_fk FOREIGN KEY ( rutprofesional )
        REFERENCES profesional ( rutprofesional );

--POBLACION
   
--TIPO USUARIO
INSERT INTO PERFIL_USUARIO (descripcion) VALUES ('Admin');
INSERT INTO PERFIL_USUARIO (descripcion) VALUES ('Profesional');
INSERT INTO PERFIL_USUARIO (descripcion) VALUES ('Cliente');

--TIPO ACTIVIDAD
INSERT INTO TIPO_ACTIVIDAD (descripcion,montoActividad) VALUES ('Visita Terreno',3);
INSERT INTO TIPO_ACTIVIDAD (descripcion,montoActividad) VALUES ('Asesoria',2);
INSERT INTO TIPO_ACTIVIDAD (descripcion,montoActividad) VALUES ('Capacitacion',3);
INSERT INTO TIPO_ACTIVIDAD (descripcion,montoActividad) VALUES ('Accidente',0);
INSERT INTO TIPO_ACTIVIDAD (descripcion,montoActividad) VALUES ('Mejoras',1);

--RUBRO
INSERT INTO RUBRO (descripcion) VALUES ('Mineria');
INSERT INTO RUBRO (descripcion) VALUES ('Construccion');
INSERT INTO RUBRO (descripcion) VALUES ('Industrial');
INSERT INTO RUBRO (descripcion) VALUES ('Otros');

COMMIT;
